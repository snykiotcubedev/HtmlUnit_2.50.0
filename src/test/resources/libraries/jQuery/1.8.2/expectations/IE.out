jQuery Test Suite 


Hide passed testsCheck for GlobalsNo try-catchminnoqsaModule: < All Modules >corecallbacksdeferredsupportdataqueueattributeseventselector - jQuery onlytraversingmanipulationcssserializeajaxeffectsoffsetdimensionsdeprecatedexportsSizzle

Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; .NET4.0C; .NET4.0E; rv:11.0) like Gecko

Tests completed in 102358 milliseconds.
6914 tests of 6915 passed, 1 failed.
1.core: Unit Testing Environment (0, 2, 2)Rerun


2.core: Basic requirements (0, 7, 7)Rerun







3.core: jQuery() (0, 31, 31)Rerun































4.core: selector state (0, 31, 31)Rerun































5.core: globalEval (0, 3, 3)Rerun



6.core: noConflict (0, 7, 7)Rerun







7.core: trim (0, 13, 13)Rerun













8.core: type (0, 23, 23)Rerun























9.core: isPlainObject (0, 15, 15)Rerun















10.core: isFunction (0, 19, 19)Rerun



















11.core: isNumeric (0, 36, 36)Rerun




































12.core: isXMLDoc - HTML (0, 4, 4)Rerun




13.core: XSS via location.hash (0, 1, 1)Rerun

14.core: isXMLDoc - XML (0, 3, 3)Rerun



15.core: isWindow (0, 14, 14)Rerun














16.core: jQuery('html') (0, 18, 18)Rerun


















17.core: jQuery('html', context) (0, 1, 1)Rerun

18.core: jQuery(selector, xml).text(str) - Loaded via XML document (0, 2, 2)Rerun


19.core: end() (0, 3, 3)Rerun



20.core: length (0, 1, 1)Rerun

21.core: size() (0, 1, 1)Rerun

22.core: get() (0, 1, 1)Rerun

23.core: toArray() (0, 1, 1)Rerun

24.core: inArray() (0, 19, 19)Rerun



















25.core: get(Number) (0, 2, 2)Rerun


26.core: get(-Number) (0, 2, 2)Rerun


27.core: each(Function) (0, 1, 1)Rerun

28.core: slice() (0, 7, 7)Rerun







29.core: first()/last() (0, 4, 4)Rerun




30.core: map() (0, 8, 8)Rerun








31.core: jQuery.merge() (0, 8, 8)Rerun








32.core: jQuery.extend(Object, Object) (0, 28, 28)Rerun




























33.core: jQuery.each(Object,Function) (0, 14, 14)Rerun














34.core: jQuery.makeArray (0, 17, 17)Rerun

















35.core: jQuery.inArray (0, 3, 3)Rerun



36.core: jQuery.isEmptyObject (0, 2, 2)Rerun


37.core: jQuery.proxy (0, 7, 7)Rerun







38.core: jQuery.parseHTML (0, 11, 11)Rerun











39.core: jQuery.parseJSON (0, 8, 8)Rerun








40.core: jQuery.parseXML (0, 8, 8)Rerun








41.core: jQuery.sub() - Static Methods (0, 18, 18)Rerun


















42.core: jQuery.sub() - .fn Methods (0, 378, 378)Rerun


























































































































































































































































































































































































43.core: jQuery.camelCase() (0, 7, 7)Rerun







44.callbacks: jQuery.Callbacks( "" ) - no filter (0, 20, 20)Rerun




















45.callbacks: jQuery.Callbacks( { } ) - no filter (0, 20, 20)Rerun




















46.callbacks: jQuery.Callbacks( "" ) - filter (0, 20, 20)Rerun




















47.callbacks: jQuery.Callbacks( { } ) - filter (0, 20, 20)Rerun




















48.callbacks: jQuery.Callbacks( "once" ) - no filter (0, 20, 20)Rerun




















49.callbacks: jQuery.Callbacks( { "once": true } ) - no filter (0, 20, 20)Rerun




















50.callbacks: jQuery.Callbacks( "once" ) - filter (0, 20, 20)Rerun




















51.callbacks: jQuery.Callbacks( { "once": true } ) - filter (0, 20, 20)Rerun




















52.callbacks: jQuery.Callbacks( "memory" ) - no filter (0, 20, 20)Rerun




















53.callbacks: jQuery.Callbacks( { "memory": true } ) - no filter (0, 20, 20)Rerun




















54.callbacks: jQuery.Callbacks( "memory" ) - filter (0, 20, 20)Rerun




















55.callbacks: jQuery.Callbacks( { "memory": true } ) - filter (0, 20, 20)Rerun




















56.callbacks: jQuery.Callbacks( "unique" ) - no filter (0, 20, 20)Rerun




















57.callbacks: jQuery.Callbacks( { "unique": true } ) - no filter (0, 20, 20)Rerun




















58.callbacks: jQuery.Callbacks( "unique" ) - filter (0, 20, 20)Rerun




















59.callbacks: jQuery.Callbacks( { "unique": true } ) - filter (0, 20, 20)Rerun




















60.callbacks: jQuery.Callbacks( "stopOnFalse" ) - no filter (0, 20, 20)Rerun




















61.callbacks: jQuery.Callbacks( { "stopOnFalse": true } ) - no filter (0, 20, 20)Rerun




















62.callbacks: jQuery.Callbacks( "stopOnFalse" ) - filter (0, 20, 20)Rerun




















63.callbacks: jQuery.Callbacks( { "stopOnFalse": true } ) - filter (0, 20, 20)Rerun




















64.callbacks: jQuery.Callbacks( "once memory" ) - no filter (0, 20, 20)Rerun




















65.callbacks: jQuery.Callbacks( { "once": true, "memory": true } ) - no filter (0, 20, 20)Rerun




















66.callbacks: jQuery.Callbacks( "once memory" ) - filter (0, 20, 20)Rerun




















67.callbacks: jQuery.Callbacks( { "once": true, "memory": true } ) - filter (0, 20, 20)Rerun




















68.callbacks: jQuery.Callbacks( "once unique" ) - no filter (0, 20, 20)Rerun




















69.callbacks: jQuery.Callbacks( { "once": true, "unique": true } ) - no filter (0, 20, 20)Rerun




















70.callbacks: jQuery.Callbacks( "once unique" ) - filter (0, 20, 20)Rerun




















71.callbacks: jQuery.Callbacks( { "once": true, "unique": true } ) - filter (0, 20, 20)Rerun




















72.callbacks: jQuery.Callbacks( "once stopOnFalse" ) - no filter (0, 20, 20)Rerun




















73.callbacks: jQuery.Callbacks( { "once": true, "stopOnFalse": true } ) - no filter (0, 20, 20)Rerun




















74.callbacks: jQuery.Callbacks( "once stopOnFalse" ) - filter (0, 20, 20)Rerun




















75.callbacks: jQuery.Callbacks( { "once": true, "stopOnFalse": true } ) - filter (0, 20, 20)Rerun




















76.callbacks: jQuery.Callbacks( "memory unique" ) - no filter (0, 20, 20)Rerun




















77.callbacks: jQuery.Callbacks( { "memory": true, "unique": true } ) - no filter (0, 20, 20)Rerun




















78.callbacks: jQuery.Callbacks( "memory unique" ) - filter (0, 20, 20)Rerun




















79.callbacks: jQuery.Callbacks( { "memory": true, "unique": true } ) - filter (0, 20, 20)Rerun




















80.callbacks: jQuery.Callbacks( "memory stopOnFalse" ) - no filter (0, 20, 20)Rerun




















81.callbacks: jQuery.Callbacks( { "memory": true, "stopOnFalse": true } ) - no filter (0, 20, 20)Rerun




















82.callbacks: jQuery.Callbacks( "memory stopOnFalse" ) - filter (0, 20, 20)Rerun




















83.callbacks: jQuery.Callbacks( { "memory": true, "stopOnFalse": true } ) - filter (0, 20, 20)Rerun




















84.callbacks: jQuery.Callbacks( "unique stopOnFalse" ) - no filter (0, 20, 20)Rerun




















85.callbacks: jQuery.Callbacks( { "unique": true, "stopOnFalse": true } ) - no filter (0, 20, 20)Rerun




















86.callbacks: jQuery.Callbacks( "unique stopOnFalse" ) - filter (0, 20, 20)Rerun




















87.callbacks: jQuery.Callbacks( { "unique": true, "stopOnFalse": true } ) - filter (0, 20, 20)Rerun




















88.callbacks: jQuery.Callbacks( options ) - options are copied (0, 1, 1)Rerun

89.callbacks: jQuery.Callbacks.fireWith - arguments are copied (0, 1, 1)Rerun

90.callbacks: jQuery.Callbacks.remove - should remove all instances (0, 1, 1)Rerun

91.callbacks: jQuery.Callbacks() - adding a string doesn't cause a stack overflow (0, 1, 1)Rerun

92.deferred: jQuery.Deferred (0, 23, 23)Rerun























93.deferred: jQuery.Deferred - new operator (0, 23, 23)Rerun























94.deferred: jQuery.Deferred - chainability (0, 10, 10)Rerun










95.deferred: jQuery.Deferred.then - filtering (done) (0, 4, 4)Rerun




96.deferred: jQuery.Deferred.then - filtering (fail) (0, 4, 4)Rerun




97.deferred: jQuery.Deferred.then - filtering (progress) (0, 3, 3)Rerun



98.deferred: jQuery.Deferred.then - deferred (done) (0, 3, 3)Rerun



99.deferred: jQuery.Deferred.then - deferred (fail) (0, 3, 3)Rerun



100.deferred: jQuery.Deferred.then - deferred (progress) (0, 3, 3)Rerun



101.deferred: jQuery.Deferred.then - context (0, 4, 4)Rerun




102.deferred: jQuery.when (0, 34, 34)Rerun


































103.deferred: jQuery.when - joined (0, 119, 119)Rerun























































































































104.support: boxModel (0, 1, 1)Rerun

105.support: body background is not lost if set prior to loading jQuery (#9238) (0, 2, 2)Rerun


106.support: A background on the testElement does not cause IE8 to crash (#9823) (0, 1, 1)Rerun

107.data: expando (0, 1, 1)Rerun

108.data: jQuery.data (0, 124, 124)Rerun




























































































































109.data: jQuery.acceptData (0, 7, 7)Rerun







110.data: .data() (0, 5, 5)Rerun





111.data: .data(String) and .data(String, Object) (0, 29, 29)Rerun





























112.data: data-* attributes (0, 40, 40)Rerun








































113.data: .data(Object) (0, 4, 4)Rerun




114.data: jQuery.removeData (0, 10, 10)Rerun










115.data: .removeData() (0, 6, 6)Rerun






116.data: JSON serialization (#8108) (0, 1, 1)Rerun

117.data: jQuery.data should follow html5 specification regarding camel casing (0, 10, 10)Rerun










118.data: jQuery.data should not miss data with preset hyphenated property names (0, 2, 2)Rerun


119.data: jQuery.data supports interoperable hyphenated/camelCase get/set of properties with arbitrary non-null|NaN|undefined values (0, 24, 24)Rerun
























120.data: jQuery.data supports interoperable removal of hyphenated/camelCase properties (0, 27, 27)Rerun



























121.data: Triggering the removeData should not throw exceptions. (#10080) (0, 1, 1)Rerun

122.data: Only check element attributes once when calling .data() - #8909 (0, 2, 2)Rerun


123.data: JSON data- attributes can have newlines (0, 1, 1)Rerun

124.queue: queue() with other types (0, 14, 14)Rerun














125.queue: queue(name) passes in the next item in the queue as a parameter (0, 2, 2)Rerun


126.queue: queue() passes in the next item in the queue as a parameter to fx queues (0, 3, 3)Rerun



127.queue: callbacks keep their place in the queue (0, 5, 5)Rerun





128.queue: delay() (0, 2, 2)Rerun


129.queue: clearQueue(name) clears the queue (0, 2, 2)Rerun


130.queue: clearQueue() clears the fx queue (0, 1, 1)Rerun

131.queue: fn.promise() - called when fx queue is empty (0, 3, 3)Rerun



132.queue: fn.promise( "queue" ) - called whenever last queue function is dequeued (0, 5, 5)Rerun





133.queue: fn.promise( "queue" ) - waits for animation to complete before resolving (0, 2, 2)Rerun


134.queue: .promise(obj) (0, 2, 2)Rerun


135.queue: delay() can be stopped (0, 3, 3)Rerun



136.queue: queue stop hooks (0, 2, 2)Rerun


137.attributes: jQuery.propFix integrity test (0, 1, 1)Rerun

138.attributes: attr(String) (0, 46, 46)Rerun














































139.attributes: attr(String) in XML Files (0, 3, 3)Rerun



140.attributes: attr(String, Function) (0, 2, 2)Rerun


141.attributes: attr(Hash) (0, 3, 3)Rerun



142.attributes: attr(String, Object) (0, 81, 81)Rerun

















































































143.attributes: attr(jquery_method) (0, 9, 9)Rerun









144.attributes: attr(String, Object) - Loaded via XML document (0, 2, 2)Rerun


145.attributes: attr('tabindex') (0, 8, 8)Rerun








146.attributes: attr('tabindex', value) (0, 9, 9)Rerun









147.attributes: removeAttr(String) (0, 12, 12)Rerun












148.attributes: removeAttr(String) in XML (0, 7, 7)Rerun







149.attributes: removeAttr(Multi String, variable space width) (0, 8, 8)Rerun








150.attributes: prop(String, Object) (0, 31, 31)Rerun































151.attributes: prop('tabindex') (0, 8, 8)Rerun








152.attributes: prop('tabindex', value) (0, 9, 9)Rerun









153.attributes: removeProp(String) (0, 6, 6)Rerun






154.attributes: val() (0, 26, 26)Rerun


























155.attributes: val(String/Number) (0, 8, 8)Rerun








156.attributes: val(Function) (0, 8, 8)Rerun








157.attributes: val(Array of Numbers) (Bug #7123) (0, 4, 4)Rerun




158.attributes: val(Function) with incoming value (0, 10, 10)Rerun










159.attributes: val(select) after form.reset() (Bug #2551) (0, 3, 3)Rerun



160.attributes: addClass(String) (0, 9, 9)Rerun









161.attributes: addClass(Function) (0, 9, 9)Rerun









162.attributes: addClass(Function) with incoming value (0, 48, 48)Rerun
















































163.attributes: removeClass(String) - simple (0, 7, 7)Rerun







164.attributes: removeClass(Function) - simple (0, 7, 7)Rerun







165.attributes: removeClass(Function) with incoming value (0, 48, 48)Rerun
















































166.attributes: removeClass() removes duplicates (0, 1, 1)Rerun

167.attributes: toggleClass(String|boolean|undefined[, boolean]) (0, 17, 17)Rerun

















168.attributes: toggleClass(Function[, boolean]) (0, 17, 17)Rerun

















169.attributes: toggleClass(Fucntion[, boolean]) with incoming value (0, 14, 14)Rerun














170.attributes: addClass, removeClass, hasClass (0, 17, 17)Rerun

















171.attributes: contents().hasClass() returns correct values (0, 2, 2)Rerun


172.attributes: coords returns correct values in IE6/IE7, see #10828 (0, 2, 2)Rerun


173.event: null or undefined handler (0, 2, 2)Rerun


174.event: bind(),live(),delegate() with non-null,defined data (0, 3, 3)Rerun



175.event: Handler changes and .trigger() order (0, 1, 1)Rerun

176.event: bind(), with data (0, 4, 4)Rerun




177.event: click(), with data (0, 3, 3)Rerun



178.event: bind(), with data, trigger with data (0, 4, 4)Rerun




179.event: bind(), multiple events at once (0, 2, 2)Rerun


180.event: bind(), five events at once (0, 1, 1)Rerun

181.event: bind(), multiple events at once and namespaces (0, 7, 7)Rerun







182.event: bind(), namespace with special add (0, 27, 27)Rerun



























183.event: bind(), no data (0, 1, 1)Rerun

184.event: bind/one/unbind(Object) (0, 6, 6)Rerun






185.event: live/die(Object), delegate/undelegate(String, Object) (0, 6, 6)Rerun






186.event: live/delegate immediate propagation (0, 2, 2)Rerun


187.event: bind/delegate bubbling, isDefaultPrevented (0, 2, 2)Rerun


188.event: bind(), iframes (0, 1, 1)Rerun

189.event: bind(), trigger change on select (0, 5, 5)Rerun





190.event: bind(), namespaced events, cloned events (0, 18, 18)Rerun


















191.event: bind(), multi-namespaced events (0, 6, 6)Rerun






192.event: bind(), with same function (0, 2, 2)Rerun


193.event: bind(), make sure order is maintained (0, 1, 1)Rerun

194.event: bind(), with different this object (0, 4, 4)Rerun




195.event: bind(name, false), unbind(name, false) (0, 3, 3)Rerun



196.event: live(name, false), die(name, false) (0, 3, 3)Rerun



197.event: delegate(selector, name, false), undelegate(selector, name, false) (0, 3, 3)Rerun



198.event: bind()/trigger()/unbind() on plain object (0, 7, 7)Rerun







199.event: unbind(type) (0, 1, 1)Rerun

200.event: unbind(eventObject) (0, 4, 4)Rerun




201.event: hover() and hover pseudo-event (0, 3, 3)Rerun



202.event: mouseover triggers mouseenter (0, 1, 1)Rerun

203.event: withinElement implemented with jQuery.contains() (0, 1, 1)Rerun

204.event: mouseenter, mouseleave don't catch exceptions (0, 2, 2)Rerun


205.event: trigger() shortcuts (0, 6, 6)Rerun






206.event: trigger() bubbling (0, 18, 18)Rerun


















207.event: trigger(type, [data], [fn]) (0, 16, 16)Rerun
















208.event: submit event bubbles on copied forms (#11649) (0, 3, 3)Rerun



209.event: change event bubbles on copied forms (#11796) (0, 3, 3)Rerun



210.event: trigger(eventObject, [data], [fn]) (0, 28, 28)Rerun




























211.event: .trigger() bubbling on disconnected elements (#10489) (0, 2, 2)Rerun


212.event: .trigger() doesn't bubble load event (#10717) (0, 1, 1)Rerun

213.event: Delegated events in SVG (#10791) (0, 2, 2)Rerun


214.event: Delegated events in forms (#10844; #11145; #8165; #11382, #11764) (0, 5, 5)Rerun





215.event: Submit event can be stopped (#11049) (0, 1, 1)Rerun

216.event: on(beforeunload) creates/deletes window property instead of adding/removing event listener (0, 3, 3)Rerun



217.event: jQuery.Event( type, props ) (0, 5, 5)Rerun





218.event: jQuery.Event.currentTarget (0, 2, 2)Rerun


219.event: toggle(Function, Function, ...) (0, 16, 16)Rerun
















220.event: .live()/.die() (0, 66, 66)Rerun


































































221.event: die all bound events (0, 1, 1)Rerun

222.event: live with multiple events (0, 1, 1)Rerun

223.event: live with namespaces (0, 15, 15)Rerun















224.event: live with change (0, 8, 8)Rerun








225.event: live with submit (0, 7, 7)Rerun







226.event: live with special events (0, 13, 13)Rerun













227.event: .delegate()/.undelegate() (0, 65, 65)Rerun

































































228.event: jQuery.off using dispatched jQuery.Event (0, 1, 1)Rerun

229.event: delegated event with delegateTarget-relative selector (0, 3, 3)Rerun



230.event: stopPropagation() stops directly-bound events on delegated target (0, 1, 1)Rerun

231.event: undelegate all bound events (0, 2, 2)Rerun


232.event: delegate with multiple events (0, 1, 1)Rerun

233.event: delegate with change (0, 8, 8)Rerun








234.event: delegate with submit (0, 2, 2)Rerun


235.event: undelegate() with only namespaces (0, 2, 2)Rerun


236.event: Non DOM element events (0, 1, 1)Rerun

237.event: inline handler returning false stops default (0, 1, 1)Rerun

238.event: window resize (0, 2, 2)Rerun


239.event: focusin bubbles (0, 2, 2)Rerun


240.event: custom events with colons (#3533, #8272) (0, 1, 1)Rerun

241.event: .on and .off (0, 9, 9)Rerun









242.event: special bind/delegate name mapping (0, 7, 7)Rerun







243.event: .on and .off, selective mixed removal (#10705) (0, 7, 7)Rerun







244.event: .on( event-map, null-selector, data ) #11130 (0, 1, 1)Rerun

245.event: clone() delegated events (#11076) (0, 3, 3)Rerun



246.event: fixHooks extensions (0, 2, 2)Rerun


247.event: jQuery.ready promise (0, 1, 1)Rerun

248.event: jQuery.ready synchronous load with long loading subresources (0, 1, 1)Rerun

249.event: jQuery.isReady (0, 2, 2)Rerun


250.event: jQuery ready (0, 10, 10)Rerun










251.event: change handler should be detached from element (0, 2, 2)Rerun


252.event: trigger click on checkbox, fires change event (0, 1, 1)Rerun

253.selector - jQuery only: element - jQuery only (0, 7, 7)Rerun







254.selector - jQuery only: class - jQuery only (0, 4, 4)Rerun




255.selector - jQuery only: attributes - jQuery only (0, 2, 2)Rerun


256.selector - jQuery only: pseudo - visibility (0, 9, 9)Rerun









257.selector - jQuery only: disconnected nodes (0, 4, 4)Rerun




258.selector - jQuery only: attributes - jQuery.attr (0, 35, 35)Rerun



































259.selector - jQuery only: Sizzle cache collides with multiple Sizzles on a page (0, 3, 3)Rerun



260.traversing: find(String) (0, 5, 5)Rerun





261.traversing: find(node|jQuery object) (0, 11, 11)Rerun











262.traversing: is(String|undefined) (0, 30, 30)Rerun






























263.traversing: is(jQuery) (0, 21, 21)Rerun





















264.traversing: is() with positional selectors (0, 23, 23)Rerun























265.traversing: index() (0, 2, 2)Rerun


266.traversing: index(Object|String|undefined) (0, 16, 16)Rerun
















267.traversing: filter(Selector|undefined) (0, 9, 9)Rerun









268.traversing: filter(Function) (0, 2, 2)Rerun


269.traversing: filter(Element) (0, 1, 1)Rerun

270.traversing: filter(Array) (0, 1, 1)Rerun

271.traversing: filter(jQuery) (0, 1, 1)Rerun

272.traversing: filter() with positional selectors (0, 19, 19)Rerun



















273.traversing: closest() (0, 14, 14)Rerun














274.traversing: closest(jQuery) (0, 8, 8)Rerun








275.traversing: not(Selector|undefined) (0, 11, 11)Rerun











276.traversing: not(Element) (0, 1, 1)Rerun

277.traversing: not(Function) (0, 1, 1)Rerun

278.traversing: not(Array) (0, 2, 2)Rerun


279.traversing: not(jQuery) (0, 1, 1)Rerun

280.traversing: has(Element) (0, 3, 3)Rerun



281.traversing: has(Selector) (0, 5, 5)Rerun





282.traversing: has(Arrayish) (0, 4, 4)Rerun




283.traversing: addBack() (0, 5, 5)Rerun





284.traversing: siblings([String]) (0, 7, 7)Rerun







285.traversing: children([String]) (0, 3, 3)Rerun



286.traversing: parent([String]) (0, 5, 5)Rerun





287.traversing: parents([String]) (0, 5, 5)Rerun





288.traversing: parentsUntil([String]) (0, 9, 9)Rerun









289.traversing: next([String]) (0, 5, 5)Rerun





290.traversing: prev([String]) (0, 4, 4)Rerun




291.traversing: nextAll([String]) (0, 4, 4)Rerun




292.traversing: prevAll([String]) (0, 4, 4)Rerun




293.traversing: nextUntil([String]) (0, 11, 11)Rerun











294.traversing: prevUntil([String]) (0, 10, 10)Rerun










295.traversing: contents() (0, 12, 12)Rerun












296.traversing: add(String|Element|Array|undefined) (0, 16, 16)Rerun
















297.traversing: add(String, Context) (0, 6, 6)Rerun






298.traversing: eq('-1') #10616 (0, 3, 3)Rerun



299.manipulation: text() (0, 5, 5)Rerun





300.manipulation: text(undefined) (0, 1, 1)Rerun

301.manipulation: text(String) (0, 4, 4)Rerun




302.manipulation: text(Function) (0, 4, 4)Rerun




303.manipulation: text(Function) with incoming value (0, 2, 2)Rerun


304.manipulation: wrap(String|Element) (0, 19, 19)Rerun



















305.manipulation: wrap(Function) (0, 19, 19)Rerun



















306.manipulation: wrap(Function) with index (#10177) (0, 6, 6)Rerun






307.manipulation: wrap(String) consecutive elements (#10177) (0, 12, 12)Rerun












308.manipulation: wrapAll(String|Element) (0, 8, 8)Rerun








309.manipulation: wrapInner(String|Element) (0, 11, 11)Rerun











310.manipulation: wrapInner(Function) (0, 11, 11)Rerun











311.manipulation: unwrap() (0, 9, 9)Rerun









312.manipulation: append(String|Element|Array&lt;Element&gt;|jQuery) (0, 58, 58)Rerun


























































313.manipulation: append(Function) (0, 58, 58)Rerun


























































314.manipulation: append(Function) with incoming value (0, 12, 12)Rerun












315.manipulation: append the same fragment with events (Bug #6997, 5566) (0, 2, 2)Rerun


316.manipulation: append HTML5 sectioning elements (Bug #6485) (0, 2, 2)Rerun


317.manipulation: HTML5 Elements inherit styles from style rules (Bug #10501) (0, 1, 1)Rerun

318.manipulation: html5 clone() cannot use the fragment cache in IE (#6485) (0, 1, 1)Rerun

319.manipulation: html(String) with HTML5 (Bug #6485) (0, 2, 2)Rerun


320.manipulation: IE8 serialization bug (0, 2, 2)Rerun


321.manipulation: html() object element #10324 (0, 1, 1)Rerun

322.manipulation: append(xml) (0, 1, 1)Rerun

323.manipulation: appendTo(String|Element|Array&lt;Element&gt;|jQuery) (0, 17, 17)Rerun

















324.manipulation: prepend(String|Element|Array&lt;Element&gt;|jQuery) (0, 6, 6)Rerun






325.manipulation: prepend(Function) (0, 6, 6)Rerun






326.manipulation: prepend(Function) with incoming value (0, 10, 10)Rerun










327.manipulation: prependTo(String|Element|Array&lt;Element&gt;|jQuery) (0, 6, 6)Rerun






328.manipulation: before(String|Element|Array&lt;Element&gt;|jQuery) (0, 7, 7)Rerun







329.manipulation: before(Function) (0, 7, 7)Rerun







330.manipulation: before and after w/ empty object (#10812) (0, 2, 2)Rerun


331.manipulation: before and after on disconnected node (#10517) (0, 2, 2)Rerun


332.manipulation: insertBefore(String|Element|Array&lt;Element&gt;|jQuery) (0, 4, 4)Rerun




333.manipulation: after(String|Element|Array&lt;Element&gt;|jQuery) (0, 7, 7)Rerun







334.manipulation: after(Function) (0, 7, 7)Rerun







335.manipulation: insertAfter(String|Element|Array&lt;Element&gt;|jQuery) (0, 4, 4)Rerun




336.manipulation: replaceWith(String|Element|Array&lt;Element&gt;|jQuery) (0, 22, 22)Rerun






















337.manipulation: replaceWith(Function) (0, 23, 23)Rerun























338.manipulation: replaceWith(string) for more than one element (0, 3, 3)Rerun



339.manipulation: replaceAll(String|Element|Array&lt;Element&gt;|jQuery) (0, 10, 10)Rerun










340.manipulation: jQuery.clone() (#8017) (0, 2, 2)Rerun


341.manipulation: clone() (#8070) (0, 2, 2)Rerun


342.manipulation: clone() (0, 44, 44)Rerun












































343.manipulation: clone(script type=non-javascript) (#11359) (0, 3, 3)Rerun



344.manipulation: clone(form element) (Bug #3879, #6655) (1, 4, 5)Rerun1.Selected option cloned correctly
2.Checked input cloned correctly
3.Checked input defaultValue cloned correctly
4.Text input defaultValue cloned correctly
5.Textarea defaultValue cloned correctlyExpected:  "foo"
 
Result:  ""
 
Diff:  "foo" "" 
 
Source:     at Anonymous function (http://localhost:22222/jquery/test/unit/manipulation.js:1349:2)
   at Test.prototype.run (http://localhost:22222/jquery/test/qunit/qunit/qunit.js:136:4)
   at Anonymous function (http://localhost:22222/jquery/test/qunit/qunit/qunit.js:279:5)
   at process (http://localhost:22222/jquery/test/qunit/qunit/qunit.js:1277:4)
   at next (http://localhost:22222/jquery/test/qunit/qunit/qunit.js:1270:3)
 


345.manipulation: clone(multiple selected options) (Bug #8129) (0, 1, 1)Rerun

346.manipulation: clone() on XML nodes (0, 2, 2)Rerun


347.manipulation: clone() on local XML nodes with html5 nodename (0, 2, 2)Rerun


348.manipulation: html(undefined) (0, 1, 1)Rerun

349.manipulation: html() on empty set (0, 1, 1)Rerun

350.manipulation: html(String) (0, 35, 35)Rerun



































351.manipulation: html(Function) (0, 37, 37)Rerun





































352.manipulation: html(Function) with incoming value (0, 20, 20)Rerun




















353.manipulation: remove() (0, 9, 9)Rerun









354.manipulation: detach() (0, 9, 9)Rerun









355.manipulation: empty() (0, 3, 3)Rerun



356.manipulation: jQuery.cleanData (0, 14, 14)Rerun














357.manipulation: jQuery.buildFragment - no plain-text caching (Bug #6779) (0, 1, 1)Rerun

358.manipulation: jQuery.html - execute scripts escaped with html comment or CDATA (#9221) (0, 3, 3)Rerun



359.manipulation: jQuery.buildFragment - plain objects are not a document #8950 (0, 1, 1)Rerun

360.manipulation: jQuery.clone - no exceptions for object elements #9587 (0, 1, 1)Rerun

361.manipulation: jQuery(<tag>) & wrap[Inner/All]() handle unknown elems (#10667) (0, 2, 2)Rerun


362.manipulation: Cloned, detached HTML5 elems (#10667,10670) (0, 7, 7)Rerun







363.manipulation: jQuery.fragments cache expectations (0, 10, 10)Rerun










364.manipulation: Guard against exceptions when clearing safeChildNodes (0, 1, 1)Rerun

365.manipulation: Ensure oldIE creates a new set on appendTo (#8894) (0, 5, 5)Rerun





366.manipulation: html() - script exceptions bubble (#11743) (0, 2, 2)Rerun


367.manipulation: checked state is cloned with clone() (0, 2, 2)Rerun


368.manipulation: manipulate mixed jQuery and text (#12384, #12346) (0, 2, 2)Rerun


369.manipulation: buildFragment works even if document[0] is iframe's window object in IE9/10 (#12266) (0, 1, 1)Rerun

370.css: css(String|Hash) (0, 46, 46)Rerun














































371.css: css() explicit and relative values (0, 29, 29)Rerun





























372.css: css(String, Object) (0, 22, 22)Rerun






















373.css: css(String, Function) (0, 3, 3)Rerun



374.css: css(String, Function) with incoming value (0, 3, 3)Rerun



375.css: css(Object) where values are Functions (0, 3, 3)Rerun



376.css: css(Object) where values are Functions with incoming values (0, 3, 3)Rerun



377.css: show(); hide() (0, 22, 22)Rerun






















378.css: show() resolves correct default display #8099 (0, 7, 7)Rerun







379.css: show() resolves correct default display, detached nodes (#10006) (0, 11, 11)Rerun











380.css: toggle() (0, 9, 9)Rerun









381.css: hide hidden elements (bug #7141) (0, 3, 3)Rerun



382.css: jQuery.css(elem, 'height') doesn't clear radio buttons (bug #1095) (0, 4, 4)Rerun




383.css: :visible selector works properly on table elements (bug #4512) (0, 1, 1)Rerun

384.css: :visible selector works properly on children with a hidden parent (bug #4512) (0, 1, 1)Rerun

385.css: internal ref to elem.runtimeStyle (bug #7608) (0, 1, 1)Rerun

386.css: marginRight computed style (bug #3333) (0, 1, 1)Rerun

387.css: box model properties incorrectly returning % instead of px, see #10639 and #12088 (0, 2, 2)Rerun


388.css: jQuery.cssProps behavior, (bug #8402) (0, 2, 2)Rerun


389.css: widows & orphans #8936 (0, 4, 4)Rerun




390.css: can't get css for disconnected in IE<9, see #10254 and #8388 (0, 2, 2)Rerun


391.css: can't get background-position in IE<9, see #10796 (0, 8, 8)Rerun








392.css: percentage properties for bottom and right in IE<9 should not be incorrectly transformed to pixels, see #11311 (0, 1, 1)Rerun

393.css: percentage properties for left and top should be transformed to pixels, see #9505 (0, 2, 2)Rerun


394.css: Do not append px to 'fill-opacity' #9548 (0, 1, 1)Rerun

395.css: css('width') and css('height') should respect box-sizing, see #11004 (0, 4, 4)Rerun




396.css: certain css values of 'normal' should be convertable to a number, see #8627 (0, 2, 2)Rerun


397.css: cssHooks - expand (0, 15, 15)Rerun















398.serialize: jQuery.param() (0, 22, 22)Rerun






















399.serialize: jQuery.param() Constructed prop values (0, 4, 4)Rerun




400.serialize: serialize() (0, 5, 5)Rerun





401.ajax: jQuery.ajax() - success callbacks (0, 8, 8)Rerun








402.ajax: jQuery.ajax() - success callbacks - (url, options) syntax (0, 8, 8)Rerun








403.ajax: jQuery.ajax() - success callbacks (late binding) (0, 8, 8)Rerun








404.ajax: jQuery.ajax() - success callbacks (oncomplete binding) (0, 8, 8)Rerun








405.ajax: jQuery.ajax() - success callbacks (very late binding) (0, 8, 8)Rerun








406.ajax: jQuery.ajax() - success callbacks (order) (0, 1, 1)Rerun

407.ajax: jQuery.ajax() - error callbacks (0, 8, 8)Rerun








408.ajax: jQuery.ajax - multiple method signatures introduced in 1.5 ( #8107) (0, 4, 4)Rerun




409.ajax: jQuery.ajax() - textStatus and errorThrown values (0, 4, 4)Rerun




410.ajax: jQuery.ajax() - responseText on error (0, 1, 1)Rerun

411.ajax: .ajax() - retry with jQuery.ajax( this ) (0, 2, 2)Rerun


412.ajax: .ajax() - headers (0, 4, 4)Rerun




413.ajax: .ajax() - Accept header (0, 1, 1)Rerun

414.ajax: .ajax() - contentType (0, 2, 2)Rerun


415.ajax: .ajax() - protocol-less urls (0, 1, 1)Rerun

416.ajax: .ajax() - hash (0, 3, 3)Rerun



417.ajax: jQuery ajax - cross-domain detection (0, 6, 6)Rerun






418.ajax: .load() - 404 error callbacks (0, 6, 6)Rerun






419.ajax: jQuery.ajax() - abort (0, 8, 8)Rerun








420.ajax: Ajax events with context (0, 14, 14)Rerun














421.ajax: jQuery.ajax context modification (0, 1, 1)Rerun

422.ajax: jQuery.ajax context modification through ajaxSetup (0, 4, 4)Rerun




423.ajax: jQuery.ajax() - disabled globals (0, 3, 3)Rerun



424.ajax: jQuery.ajax - xml: non-namespace elements inside namespaced elements (0, 3, 3)Rerun



425.ajax: jQuery.ajax - xml: non-namespace elements inside namespaced elements (over JSONP) (0, 3, 3)Rerun



426.ajax: jQuery.ajax - HEAD requests (0, 2, 2)Rerun


427.ajax: jQuery.ajax - beforeSend (0, 1, 1)Rerun

428.ajax: jQuery.ajax - beforeSend, cancel request (#2688) (0, 2, 2)Rerun


429.ajax: jQuery.ajax - beforeSend, cancel request manually (0, 2, 2)Rerun


430.ajax: jQuery.ajax - dataType html (0, 5, 5)Rerun





431.ajax: synchronous request (0, 1, 1)Rerun

432.ajax: synchronous request with callbacks (0, 2, 2)Rerun


433.ajax: pass-through request object (0, 8, 8)Rerun








434.ajax: ajax cache (0, 18, 18)Rerun


















435.ajax: load(String) (0, 2, 2)Rerun


436.ajax: load(String,null) (0, 2, 2)Rerun


437.ajax: load(String,undefined) (0, 2, 2)Rerun


438.ajax: load('url selector') (0, 1, 1)Rerun

439.ajax: load(String, Function) with ajaxSetup on dataType json, see #2046 (0, 1, 1)Rerun

440.ajax: load(String, Function) - simple: inject text into DOM (0, 2, 2)Rerun


441.ajax: load(String, Function) - check scripts (0, 7, 7)Rerun







442.ajax: load(String, Function) - check file with only a script tag (0, 3, 3)Rerun



443.ajax: load(String, Function) - dataFilter in ajaxSettings (0, 2, 2)Rerun


444.ajax: load(String, Object, Function) (0, 2, 2)Rerun


445.ajax: load(String, String, Function) (0, 2, 2)Rerun


446.ajax: load() - data specified in ajaxSettings is merged in (#10524) (0, 1, 1)Rerun

447.ajax: load() - callbacks get the correct parameters (0, 8, 8)Rerun








448.ajax: jQuery.get(String, Function) - data in ajaxSettings (#8277) (0, 1, 1)Rerun

449.ajax: jQuery.get(String, Hash, Function) - parse xml and use text() on nodes (0, 2, 2)Rerun


450.ajax: jQuery.getScript(String, Function) - with callback (0, 3, 3)Rerun



451.ajax: jQuery.getScript(String, Function) - no callback (0, 1, 1)Rerun

452.ajax: jQuery.ajax() - JSONP, Same Domain (0, 24, 24)Rerun
























453.ajax: jQuery.ajax() - JSONP, Cross Domain (0, 24, 24)Rerun
























454.ajax: jQuery.ajax() - script, Remote (0, 2, 2)Rerun


455.ajax: jQuery.ajax() - script, Remote with POST (0, 3, 3)Rerun



456.ajax: jQuery.ajax() - script, Remote with scheme-less URL (0, 2, 2)Rerun


457.ajax: jQuery.ajax() - malformed JSON (0, 2, 2)Rerun


458.ajax: jQuery.ajax() - script, throws exception (#11743) (0, 1, 1)Rerun

459.ajax: jQuery.ajax() - script by content-type (0, 2, 2)Rerun


460.ajax: jQuery.ajax() - json by content-type (0, 5, 5)Rerun





461.ajax: jQuery.ajax() - json by content-type disabled with options (0, 6, 6)Rerun






462.ajax: jQuery.getJSON(String, Hash, Function) - JSON array (0, 5, 5)Rerun





463.ajax: jQuery.getJSON(String, Function) - JSON object (0, 2, 2)Rerun


464.ajax: jQuery.getJSON - Using Native JSON (0, 2, 2)Rerun


465.ajax: jQuery.getJSON(String, Function) - JSON object with absolute url to local content (0, 2, 2)Rerun


466.ajax: jQuery.post - data (0, 3, 3)Rerun



467.ajax: jQuery.post(String, Hash, Function) - simple with xml (0, 4, 4)Rerun




468.ajax: jQuery.ajaxSetup({timeout: Number}) - with global timeout (0, 1, 1)Rerun

469.ajax: jQuery.ajaxSetup({timeout: Number}) with localtimeout (0, 1, 1)Rerun

470.ajax: jQuery.ajax - simple get (0, 1, 1)Rerun

471.ajax: jQuery.ajax - simple post (0, 1, 1)Rerun

472.ajax: ajaxSetup() (0, 1, 1)Rerun

473.ajax: data option: evaluate function values (#2806) (0, 1, 1)Rerun

474.ajax: data option: empty bodies for non-GET requests (0, 1, 1)Rerun

475.ajax: jQuery.ajax - If-Modified-Since support (cache) (0, 3, 3)Rerun



476.ajax: jQuery.ajax - Etag support (cache) (0, 3, 3)Rerun



477.ajax: jQuery.ajax - If-Modified-Since support (no cache) (0, 3, 3)Rerun



478.ajax: jQuery.ajax - Etag support (no cache) (0, 3, 3)Rerun



479.ajax: jQuery ajax - failing cross-domain (0, 2, 2)Rerun


480.ajax: jQuery ajax - atom+xml (0, 1, 1)Rerun

481.ajax: jQuery.ajax - Location object as url (#7531) (0, 1, 1)Rerun

482.ajax: jQuery.ajax - Context with circular references (#9887) (0, 2, 2)Rerun


483.ajax: jQuery.ajax - statusText (0, 3, 3)Rerun



484.ajax: jQuery.ajax - statusCode (0, 20, 20)Rerun




















485.ajax: jQuery.ajax - transitive conversions (0, 8, 8)Rerun








486.ajax: jQuery.ajax - overrideMimeType (0, 2, 2)Rerun


487.ajax: jQuery.ajax - abort in prefilter (0, 1, 1)Rerun

488.ajax: jQuery.ajax - loading binary data shouldn't throw an exception in IE (#11426) (0, 1, 1)Rerun

489.ajax: jQuery.domManip - no side effect because of ajaxSetup or global events (#11264) (0, 1, 1)Rerun

490.ajax: jQuery.domManip - script in comments are properly evaluated (#11402) (0, 2, 2)Rerun


491.ajax: jQuery.ajax - active counter (0, 1, 1)Rerun

492.effects: sanity check (0, 1, 1)Rerun

493.effects: show() (0, 26, 26)Rerun


























494.effects: show(Number) - other displays (0, 15, 15)Rerun















495.effects: Persist correct display value (0, 3, 3)Rerun



496.effects: animate(Hash, Object, Function) (0, 1, 1)Rerun

497.effects: animate negative height (0, 1, 1)Rerun

498.effects: animate negative margin (0, 1, 1)Rerun

499.effects: animate negative margin with px (0, 1, 1)Rerun

500.effects: animate negative padding (0, 1, 1)Rerun

501.effects: animate block as inline width/height (0, 3, 3)Rerun



502.effects: animate native inline width/height (0, 3, 3)Rerun



503.effects: animate block width/height (0, 3, 3)Rerun



504.effects: animate table width/height (0, 1, 1)Rerun

505.effects: animate table-row width/height (0, 3, 3)Rerun



506.effects: animate table-cell width/height (0, 3, 3)Rerun



507.effects: animate percentage(%) on width/height (0, 2, 2)Rerun


508.effects: animate resets overflow-x and overflow-y when finished (0, 2, 2)Rerun


509.effects: animate option { queue: false } (0, 2, 2)Rerun


510.effects: animate option { queue: true } (0, 2, 2)Rerun


511.effects: animate option { queue: 'name' } (0, 5, 5)Rerun





512.effects: animate with no properties (0, 2, 2)Rerun


513.effects: animate duration 0 (0, 11, 11)Rerun











514.effects: animate hyphenated properties (0, 1, 1)Rerun

515.effects: animate non-element (0, 1, 1)Rerun

516.effects: stop() (0, 4, 4)Rerun




517.effects: stop() - several in queue (0, 3, 3)Rerun



518.effects: stop(clearQueue) (0, 4, 4)Rerun




519.effects: stop(clearQueue, gotoEnd) (0, 1, 1)Rerun

520.effects: stop( queue, ..., ... ) - Stop single queues (0, 3, 3)Rerun



521.effects: toggle() (0, 6, 6)Rerun






522.effects: jQuery.fx.prototype.cur() - <1.8 Back Compat (0, 7, 7)Rerun







523.effects: JS Overflow and Display (0, 2, 2)Rerun


524.effects: CSS Overflow and Display (0, 2, 2)Rerun


525.effects: CSS Auto to 0 (0, 6, 6)Rerun






526.effects: CSS Auto to 50 (0, 6, 6)Rerun






527.effects: CSS Auto to 100 (0, 6, 6)Rerun






528.effects: CSS Auto to show (0, 5, 5)Rerun





529.effects: CSS Auto to hide (0, 4, 4)Rerun




530.effects: JS Auto to 0 (0, 6, 6)Rerun






531.effects: JS Auto to 50 (0, 6, 6)Rerun






532.effects: JS Auto to 100 (0, 6, 6)Rerun






533.effects: JS Auto to show (0, 5, 5)Rerun





534.effects: JS Auto to hide (0, 4, 4)Rerun




535.effects: CSS 100 to 0 (0, 6, 6)Rerun






536.effects: CSS 100 to 50 (0, 6, 6)Rerun






537.effects: CSS 100 to 100 (0, 6, 6)Rerun






538.effects: CSS 100 to show (0, 5, 5)Rerun





539.effects: CSS 100 to hide (0, 4, 4)Rerun




540.effects: JS 100 to 0 (0, 6, 6)Rerun






541.effects: JS 100 to 50 (0, 6, 6)Rerun






542.effects: JS 100 to 100 (0, 6, 6)Rerun






543.effects: JS 100 to show (0, 5, 5)Rerun





544.effects: JS 100 to hide (0, 4, 4)Rerun




545.effects: CSS 50 to 0 (0, 6, 6)Rerun






546.effects: CSS 50 to 50 (0, 6, 6)Rerun






547.effects: CSS 50 to 100 (0, 6, 6)Rerun






548.effects: CSS 50 to show (0, 5, 5)Rerun





549.effects: CSS 50 to hide (0, 4, 4)Rerun




550.effects: JS 50 to 0 (0, 6, 6)Rerun






551.effects: JS 50 to 50 (0, 6, 6)Rerun






552.effects: JS 50 to 100 (0, 6, 6)Rerun






553.effects: JS 50 to show (0, 5, 5)Rerun





554.effects: JS 50 to hide (0, 4, 4)Rerun




555.effects: CSS 0 to 0 (0, 6, 6)Rerun






556.effects: CSS 0 to 50 (0, 6, 6)Rerun






557.effects: CSS 0 to 100 (0, 6, 6)Rerun






558.effects: CSS 0 to show (0, 5, 5)Rerun





559.effects: CSS 0 to hide (0, 4, 4)Rerun




560.effects: JS 0 to 0 (0, 6, 6)Rerun






561.effects: JS 0 to 50 (0, 6, 6)Rerun






562.effects: JS 0 to 100 (0, 6, 6)Rerun






563.effects: JS 0 to show (0, 5, 5)Rerun





564.effects: JS 0 to hide (0, 4, 4)Rerun




565.effects: Chain fadeOut fadeIn (0, 5, 5)Rerun





566.effects: Chain fadeIn fadeOut (0, 5, 5)Rerun





567.effects: Chain hide show (0, 5, 5)Rerun





568.effects: Chain show hide (0, 5, 5)Rerun





569.effects: Chain show hide with easing and callback (0, 5, 5)Rerun





570.effects: Chain toggle in (0, 5, 5)Rerun





571.effects: Chain toggle out (0, 5, 5)Rerun





572.effects: Chain toggle out with easing and callback (0, 5, 5)Rerun





573.effects: Chain slideDown slideUp (0, 5, 5)Rerun





574.effects: Chain slideUp slideDown (0, 5, 5)Rerun





575.effects: Chain slideUp slideDown with easing and callback (0, 5, 5)Rerun





576.effects: Chain slideToggle in (0, 5, 5)Rerun





577.effects: Chain slideToggle out (0, 5, 5)Rerun





578.effects: Chain fadeToggle in (0, 5, 5)Rerun





579.effects: Chain fadeToggle out (0, 5, 5)Rerun





580.effects: Chain fadeTo 0.5 1.0 with easing and callback) (0, 5, 5)Rerun





581.effects: jQuery.show('fast') doesn't clear radio buttons (bug #1095) (0, 4, 4)Rerun




582.effects: slideToggle().stop().slideToggle() (0, 8, 8)Rerun








583.effects: fadeToggle().stop().fadeToggle() (0, 8, 8)Rerun








584.effects: toggle().stop().toggle() (0, 8, 8)Rerun








585.effects: animate with per-property easing (0, 5, 5)Rerun





586.effects: animate with CSS shorthand properties (0, 11, 11)Rerun











587.effects: hide hidden elements, with animation (bug #7141) (0, 3, 3)Rerun



588.effects: animate unit-less properties (#4966) (0, 2, 2)Rerun


589.effects: animate properties missing px w/ opacity as last (#9074) (0, 6, 6)Rerun






590.effects: callbacks should fire in correct order (#9100) (0, 1, 1)Rerun

591.effects: callbacks that throw exceptions will be removed (#5684) (0, 2, 2)Rerun


592.effects: animate will scale margin properties individually (0, 2, 2)Rerun


593.effects: Do not append px to 'fill-opacity' #9548 (0, 1, 1)Rerun

594.effects: jQuery.Animation( object, props, opts ) (0, 4, 4)Rerun




595.effects: Animate Option: step: function( percent, tween ) (0, 1, 1)Rerun

596.effects: Animate callbacks have correct context (0, 2, 2)Rerun


597.effects: User supplied callback called after show when fx off (#8892) (0, 2, 2)Rerun


598.effects: animate should set display for disconnected nodes (0, 18, 18)Rerun


















599.effects: Animation callback should not show animated element as animated (#7157) (0, 1, 1)Rerun

600.effects: hide called on element within hidden parent should set display to none (#10045) (0, 3, 3)Rerun



601.effects: hide, fadeOut and slideUp called on element width height and width = 0 should set display to none (0, 5, 5)Rerun





602.effects: Handle queue:false promises (0, 10, 10)Rerun










603.effects: multiple unqueued and promise (0, 4, 4)Rerun




604.effects: animate does not change start value for non-px animation (#7109) (0, 1, 1)Rerun

605.effects: non-px animation handles non-numeric start (#11971) (0, 1, 1)Rerun

606.effects: Animation callbacks (#11797) (0, 15, 15)Rerun















607.effects: Animate properly sets overflow hidden when animating width/height (#12117) (0, 4, 4)Rerun




608.effects: Animations with 0 duration don't ease (#12273) (0, 1, 1)Rerun

609.offset: empty set (0, 2, 2)Rerun


610.offset: object without getBoundingClientRect (0, 2, 2)Rerun


611.offset: disconnected node (0, 2, 2)Rerun


612.offset: absolute (0, 4, 4)Rerun




613.offset: absolute (0, 178, 178)Rerun


















































































































































































614.offset: relative (0, 60, 60)Rerun




























































615.offset: static (0, 80, 80)Rerun
















































































616.offset: fixed (0, 30, 30)Rerun






























617.offset: table (0, 4, 4)Rerun




618.offset: scroll (0, 24, 24)Rerun
























619.offset: body (0, 2, 2)Rerun


620.offset: chaining (0, 3, 3)Rerun



621.offset: offsetParent (0, 12, 12)Rerun












622.offset: fractions (see #7730 and #7885) (0, 2, 2)Rerun


623.dimensions: width() (0, 9, 9)Rerun









624.dimensions: width(Function) (0, 9, 9)Rerun









625.dimensions: width(Function(args)) (0, 2, 2)Rerun


626.dimensions: height() (0, 9, 9)Rerun









627.dimensions: height(Function) (0, 9, 9)Rerun









628.dimensions: height(Function(args)) (0, 2, 2)Rerun


629.dimensions: innerWidth() (0, 6, 6)Rerun






630.dimensions: innerHeight() (0, 6, 6)Rerun






631.dimensions: outerWidth() (0, 11, 11)Rerun











632.dimensions: child of a hidden elem (or unconnected node) has accurate inner/outer/Width()/Height() see #9441 #9300 (0, 16, 16)Rerun
















633.dimensions: getting dimensions shouldnt modify runtimeStyle see #9233 (0, 1, 1)Rerun

634.dimensions: table dimensions (0, 2, 2)Rerun


635.dimensions: box-sizing:border-box child of a hidden elem (or unconnected node) has accurate inner/outer/Width()/Height() see #10413 (0, 16, 16)Rerun
















636.dimensions: outerHeight() (0, 11, 11)Rerun











637.dimensions: passing undefined is a setter #5571 (0, 4, 4)Rerun




638.dimensions: getters on non elements should return null (0, 8, 8)Rerun








639.dimensions: setters with and without box-sizing:border-box (0, 20, 20)Rerun




















640.dimensions: window vs. small document (0, 1, 1)Rerun

641.dimensions: window vs. large document (0, 2, 2)Rerun


642.deprecated: browser (0, 544, 544)Rerun
































































































































































































































































































































































































































































































































































643.exports: amdModule (0, 1, 1)Rerun

644.Sizzle: selector: element (0, 36, 36)Rerun




































645.Sizzle: selector: XML Document Selectors (0, 10, 10)Rerun










646.Sizzle: selector: broken (0, 21, 21)Rerun





















647.Sizzle: selector: id (0, 31, 31)Rerun































648.Sizzle: selector: class (0, 24, 24)Rerun
























649.Sizzle: selector: name (0, 15, 15)Rerun















650.Sizzle: selector: multiple (0, 6, 6)Rerun






651.Sizzle: selector: child and adjacent (0, 42, 42)Rerun










































652.Sizzle: selector: attributes (0, 62, 62)Rerun






























































653.Sizzle: selector: pseudo - child (0, 42, 42)Rerun










































654.Sizzle: selector: pseudo - misc (0, 42, 42)Rerun










































655.Sizzle: selector: pseudo - :not (0, 43, 43)Rerun











































656.Sizzle: selector: pseudo - position (0, 33, 33)Rerun

































657.Sizzle: selector: pseudo - form (0, 10, 10)Rerun










658.Sizzle: selector: caching (0, 1, 1)Rerun

659.Sizzle: selector: Sizzle.contains (0, 16, 16)Rerun
















 

  

See this blog entry for more information.

Here are some [links] in a normal paragraph: Google, Google Groups (Link).This link has class="blog": diveintomark 


Everything inside the red border is inside a div with id="foo".

This is a normal link: Yahoo

This link has class="blog": Simon Willison's Weblog
 
Try them out:

Action:           Button foobar Nothing 1 2 3  Nothing 1 2 3  Nothing 1 2 3 no value  Nothing 1 2  3 no value  1 2 3           test element 
Float test.  
  

    

?
Z            ABC ABC ABC  ABC ABC ABC  YES  NO     NO    NO    





hi there 







 



1.Rice
2.Beans
3.Blinis
4.Tofu

I'm hungry. I should...
...Eat lots of food... | ...Eat a little food... | ...Eat no food... ...Eat a burger... ...Eat some funyuns... ...Eat some funyuns... 
  

1 2      
​ 


fadeIn
fadeIn

fadeOut


show
show

hide


togglein
togglein

toggleout


slideUp
slideUp

slideDown


slideToggleIn
slideToggleIn

slideToggleOut


fadeToggleIn
fadeToggleIn

fadeToggleOut


fadeTo
fadeTo

